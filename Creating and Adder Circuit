from nand import NAND_gate
from not_gate import NOT_gate
from and_gate import AND_gate
from or_gate import OR_gate
from xor_gate import XOR_gate


def half_adder(a,b):
  s = XOR_gate(a,b)
  c = AND_gate(a,b)
  return (s,c)


def full_adder(a,b,c):
  s = 0
  c_out = 0
  s1,c1 = half_adder(a,b)
  s,c2 = half_adder(s1, c)
  c_out = OR_gate(c1,c2)
  return(s, c_out)

def ALU(a,b,c, opcode):
  if opcode == 0:
    a,c1 = half_adder(a,b)
    return(a,c1)
  elif opcode == 1:
    s,c1 = full_adder(a,b,c)
    return(s,c1)


print(ALU(0,0,1,1))

